---
interface Props {
  title: string;
  description: string;
  image?: string;
  canonicalURL?: string | URL;
  breadcrumbs?: {
    name: string;
    url: string;
  }[];
  faqs?: {
    question: string;
    answer: string;
  }[];
}

const {
  title,
  description = "Convert between PNG and BMP formats with our free online tools",
  image = '/social-image.png',
  canonicalURL,
  breadcrumbs = [],
  faqs = [],
} = Astro.props;

const siteURL = Astro.site || new URL('https://example.com');
const resolvedCanonicalURL = canonicalURL 
  ? (typeof canonicalURL === 'string' ? new URL(canonicalURL, siteURL) : canonicalURL)
  : new URL(Astro.url.pathname, siteURL);
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.png" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={resolvedCanonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, siteURL)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, siteURL)} />

<!-- Breadcrumbs Structured Data -->
{breadcrumbs.length > 0 && (
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    "itemListElement": breadcrumbs.map((item, index) => ({
      "@type": "ListItem",
      "position": index + 1,
      "name": item.name,
      "item": new URL(item.url, siteURL).toString()
    }))
  })} />
)}

<!-- FAQ Structured Data -->
{faqs.length > 0 && (
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "FAQPage",
    "mainEntity": faqs.map(faq => ({
      "@type": "Question",
      "name": faq.question,
      "acceptedAnswer": {
        "@type": "Answer",
        "text": faq.answer
      }
    }))
  })} />
)}

<!-- Mailgo -->
<script src="https://unpkg.com/mailgo@0.12.2/dist/mailgo.min.js"></script>

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-4NQJMXXECW"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-4NQJMXXECW');
</script>