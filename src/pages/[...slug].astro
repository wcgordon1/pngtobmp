---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import BaseHead from '../components/BaseHead.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import FAQ from '../components/FAQ.astro';
import PngToBmpConverter from '../components/PngToBmpConverter.astro';
import BmpToPngConverter from '../components/BmpToPngConverter.astro';

export async function getStaticPaths() {
  const pages = await getCollection('converters');
  
  return pages.map((page) => {
    const category = page.data.category;
    
    return {
      params: {
        slug: `${category}/${page.slug}`
      },
      props: { page },
    };
  });
}

const { page } = Astro.props;
const { Content } = await page.render();

const categoryNames = {
  'image-converters': 'Image Converters',
  'documentation': 'Documentation',
  'embedded-systems': 'Embedded Systems',
  'printing': 'Printing',
  'retro-gaming': 'Retro Gaming',
  'medical-imaging': 'Medical Imaging',
  'cad-software': 'CAD Software'
};

const category = page.data.category;

// Determine which converter to show based on the page tags
const getConverterComponent = (tags) => {
  if (tags.includes('png-to-bmp')) {
    return PngToBmpConverter;
  }
  if (tags.includes('bmp-to-png')) {
    return BmpToPngConverter;
  }
  return null;
};

const ConverterComponent = getConverterComponent(page.data.tags);

// Common FAQs for each converter type
const commonFaqs = {
  'png-to-bmp': [
    {
      question: "How do I convert PNG to BMP?",
      answer: "Simply click 'Choose Files' to select your PNG files, then click 'Convert' to transform them to BMP format. You can convert multiple files at once."
    }
    // ... rest of your FAQs
  ],
  'bmp-to-png': [
    {
      question: "How do I convert BMP to PNG?",
      answer: "Click 'Choose Files' to select your BMP files, then click 'Convert' to transform them to PNG format. Multiple files can be converted simultaneously."
    }
    // ... rest of your FAQs
  ]
};

const getFaqs = (tags) => {
  if (tags.includes('png-to-bmp')) return commonFaqs['png-to-bmp'];
  if (tags.includes('bmp-to-png')) return commonFaqs['bmp-to-png'];
  return [];
};

const faqs = getFaqs(page.data.tags);

const breadcrumbs = [
  { name: 'Home', url: '/' },
  { name: categoryNames[category], url: `/${category}` },
  { name: page.data.title, url: `/${category}/${page.slug}` }
];
---

<Layout title={page.data.title}>
  <BaseHead 
    title={page.data.title} 
    description={page.data.description}
    breadcrumbs={breadcrumbs}
    faqs={faqs}
  />
  <main>
    <Breadcrumbs paths={breadcrumbs.slice(1)} />
    
    <article class="content">
      <h1>{page.data.title}</h1>
      {ConverterComponent && <ConverterComponent />}
      <div class="markdown-content">
        <Content />
      </div>
      {faqs.length > 0 && <FAQ faqs={faqs} />}
    </article>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .content {
    margin-top: 2rem;
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .markdown-content {
    margin-top: 2rem;
    padding: 1.5rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
    border-radius: 8px;
  }
  .markdown-content :global(h1) {
    display: none;
  }
  .markdown-content :global(h2) {
    font-size: 1.8rem;
    margin: 2rem 0 1rem;
    color: rgb(var(--accent-light));
  }
  .markdown-content :global(p) {
    margin-bottom: 1rem;
    color: white;
  }
  .markdown-content :global(ul) {
    margin: 1rem 0;
    padding-left: 1.5rem;
    color: white;
  }
  .markdown-content :global(li) {
    margin: 0.5rem 0;
  }
</style> 